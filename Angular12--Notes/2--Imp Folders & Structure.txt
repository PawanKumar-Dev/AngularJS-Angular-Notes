1. Important Folders for Beginners

	- package.json: Most important file. Even your project won't work without this file. It contains all your CLI commands details such what are they? & what they do when run. It also keep record of all "dependency" and "dev-dependency" of your app.

  - node_modules: these are files belong to your AJ libraries. These library in turn provide code for our AJ app. But these files are auto-generated by NPM so modifing them is not recommended. Since you will lose all changes if NPM cmd is re-run.

  - src folder: We work on this folder 99% time. So its very important. It contains all our app components and most other files.
    -- app: This contains are mostly components parts.
    -- assets: we place our imgs or other 3rd party files we need for our app
    -- environments: its become critical when we upload files into live server. It lets us test our environment.
    -- index.html: root access point of our app. Here we load our AJ app.
    -- main.js: it bootstrap(meaning it installs or load) our Angular code into index.html file. Meaning it connects our AJ code with Index.html file.
    -- style.css: contains our global css styles of AJ.


2. Important Folders for Advance AJ users
  - package-lock.json: Similar to package.json file. But unlike package.json this contains in-depth details about all libraries being used by different dependency. It important but if we delete our Project still runs becoz package-lock.json get re-created when we run package.json file with NPM.

  - angluar.json: it keeps tracks of things like js, css, favicon etc files that are being used by our Angular app.

  - tsconfig.json: this is main typescript configration file. Here we can modify different thing about how we write our code.

  - .browserlistrc: keep a track record which browers are being supported

  - polyfills.ts: here we can load some libraries which helps resolve our app behaviour in certain situation. Like if our app is not running properly in particalr browser version etc.